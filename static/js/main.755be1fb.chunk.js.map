{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Phonebook.module.css","components/ContactElement/ContactElement.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactElement/ContactElement.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactElement","id","name","number","deleteContact","className","s","button","type","onClick","prototype","PropTypes","string","isRequired","func","checkPropTypes","ContactList","contacts","console","log","list","map","item","arrayOf","object","ContactForm","addContact","useState","setName","setNumber","handleChange","e","currentTarget","value","find","onSubmit","preventDefault","isContactsIncludes","contact","alert","lableContact","inputContact","onChange","pattern","title","required","shape","Filter","findLable","filter","App","setContacts","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","visibleContact","normalizeTodo","toLowerCase","includes","getVisibleContact","container","phonebookContainer","uuidv4","contactsContainer","todoId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.755be1fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lableContact\":\"ContactForm_lableContact__1vjZ5\",\"inputContact\":\"ContactForm_inputContact__2SP0Q\",\"button\":\"ContactForm_button__3M6qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__ZNKJo\",\"phonebookContainer\":\"Phonebook_phonebookContainer__1Fknw\",\"contactsContainer\":\"Phonebook_contactsContainer__NvLCX\",\"list\":\"Phonebook_list__3ftIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"ContactElement_number__3wB1F\",\"button\":\"ContactElement_button__Ja16J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1h63Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findLable\":\"Filter_findLable__2ndbk\",\"find\":\"Filter_find__3dBjS\"};","import s from \"./ContactElement.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactElement({ id, name, number, deleteContact }) {\n  return (\n    <p>\n      <span>{name}:</span>\n      <span className={s.number}>{number}</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </p>\n  );\n}\n\nContactElement.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(ContactElement);\n\nexport default ContactElement;\n","import ContactElement from '../ContactElement';\nimport s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nfunction ContactList({ contacts, deleteContact }) {\n  console.log(contacts);\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <ContactElement\n            id={id}\n            name={name}\n            number={number}\n            deleteContact={deleteContact}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.prototype = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(ContactList);\n\nexport default ContactList;\n","import { useState } from \"react\";\nimport s from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactForm({ addContact, contacts }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  console.log(contacts);\n\n  const handleChange = (e) => {\n    console.log(e.currentTarget.name);\n    console.log(e.currentTarget.value);\n\n    if (e.currentTarget.name === \"name\") {\n      setName(e.currentTarget.value);\n    }\n\n    if (e.currentTarget.name === \"number\") {\n      setNumber(e.currentTarget.value);\n    }\n  };\n  console.log(name);\n  console.log(number);\n  console.log(contacts.find);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(contacts);\n\n    const isContactsIncludes = contacts.find(\n      (contact) => console.log(contact.name)\n\n    );\n\n    console.log(isContactsIncludes);\n\n    if (isContactsIncludes) {\n      return alert(`${name}is alredy in contacts`);\n    } else {\n      addContact(name, number);\n\n      setName(\"\");\n      setNumber(\"\");\n\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.lableContact}>\n        Name\n        <input\n          className={s.inputContact}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={s.lableContact}>\n        Number\n        <input\n          className={s.inputContact}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n\nContactForm.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n  addContact: PropTypes.func.isRequired,\n};\n","// import React from \"react\";\nimport s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.findLable}>\n      Find contacts by name\n      <input\n        className={s.find}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n\nFilter.prototype = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(Filter);\n\nexport default Filter;\n","import { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./components/ContactList\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport s from \"./components/Phonebook.module.css\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n  \n    }\n  }, []);\n\nuseEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n\n   \n  const addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    setContacts([contact, ...contacts]);\n  };\n\n  const changeFilter = (e) => {\n    console.log(e.currentTarget.value);\n    setFilter(e.currentTarget.value);\n    \n  };\n\n  const getVisibleContact = () => {\n    console.log(contacts);\n    const normalizeTodo = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeTodo)\n    );\n  };\n\n  const deleteContact = (todoId) => {\n    setContacts(\n      (contacts) =>\n        (contacts = contacts.filter((contact) => contact.id !== todoId))\n    );\n  \n  };\n\n  const visibleContact = getVisibleContact();\n\n  return (\n    <div className={s.container}>\n      <div className={s.phonebookContainer}>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={addContact} contacts={contacts} />\n      </div>\n\n      <div className={s.contactsContainer}>\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList contacts={visibleContact} deleteContact={deleteContact} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}